{
	"project": {
		"api-version": 2.1,
		"project-version": 1,
		"name": "CSAP Platform",
		"architect": "peter.nightingale@***REMOVED***.com",
		"description": "Includes: CSAP test services, CSAP integration environment",
		"emailNotifications": "peter.nightingale@***REMOVED***.com",
		"test": "for y"
	},
	"environments": {
		"defaults": {
			"settings": {
				"base-env-only": true,
				"application": {
					"name": "Sensus Integration",
					"sub-projects": [
						"data-center-ha.json"
					],
					"definition-repo-url": "https://bitbucket.org/***REMOVED***/***REMOVED***-integration-definition.git",
					"definition-repo-branch": "master",
					"maven-url": "http://***REMOVED***.***REMOVED***:8081/artifactory/csap-release",
					"help-menu-items": {
						"User Guide": "https://***REMOVED***.atlassian.net/wiki/spaces/CSAP",
						"Release Notes": "https://***REMOVED***.atlassian.net/wiki/spaces/CSAP/pages/258211856/Release+Notes",
						"Quick Install": "https://***REMOVED***.atlassian.net/wiki/spaces/CSAP/pages/395282580/CSAP+Quick+Install",
						"Health Status": "https://***REMOVED***.atlassian.net/wiki/spaces/CSAP/pages/258211861/CSAP+Health",
						"Application Editor": "https://***REMOVED***.atlassian.net/wiki/spaces/CSAP/pages/258211875/CSAP+Application+Editor",
						"FAQ": "https://***REMOVED***.atlassian.net/wiki/spaces/CSAP/pages/347177032/CSAP+FAQ",
						"Local Login": "http://csap-dev01.***REMOVED***:8011/login?local=true"
					}
				},
				"operatorNotifications": [
					"csapsupport@yourcompany.com"
				],
				"csap-host-agent": {
					"maxJmxCollectionMs": 3000,
					"numberWorkerThreads": "20",
					"adminToAgentTimeoutInMs": "4000",
					"lsofIntervalMins": 1,
					"duIntervalMins": 5,
					"apiLocal": true,
					"apiUser": "agentUser",
					"apiPass": "CSAP Developmentdev",
					"infraTests": {},
					"gitSslVerificationDisabledUrls": [
						"https://updateTHisIfNeeded.com/demo.git"
					]
				},
				"csap-data": {
					"user": "SensusCsap",
					"credential": "pAH+tsfwU/kgW+34WPXQW/8Z0a9SJpXq8dNOirMmUxM=",
					"service-url": "events-disabled"
				},
				"csap-data-orig": {
					"user": "SensusCsap",
					"credential": "pAH+tsfwU/kgW+34WPXQW/8Z0a9SJpXq8dNOirMmUxM=",
					"service-url": "http://csap-dev01.***REMOVED***:8080/events-service",
					"secondary-publish": {
						"enabled": "true",
						"url": "http://csap-dev03.***REMOVED***:7021/events-service-beta/api/event",
						"user": "SensusCsap",
						"pass": "pAH+tsfwU/kgW+34WPXQW/8Z0a9SJpXq8dNOirMmUxM="
					}
				},
				"monitorDefaults": {
					"jvm_jmxHeartbeat": true,
					"maxDiskPercent": "80",
					"maxDiskPercentIgnorePatterns": "/mnt/.*",
					"maxHostCpuLoad": 4,
					"maxHostCpu": 50,
					"maxHostCpuIoWait": 11,
					"minFreeMemoryMb": "1000",
					"max_diskUtil": "150",
					"max_threadCount": "120",
					"max_fileCount": "350",
					"max_rssMemory": "500m",
					"max_tomcatConnections": "40",
					"max_topCpu": "150",
					"max_socketCount": "10"
				},
				"configuration-maps": {
					"global": {
						"csap_auto": "test_only",
						"found-in": [
							"* all services"
						]
					},
					"csap-logging": {
						"$$clean-disk-gb": 10,
						"found-in": [
							"csap-package-logging",
							"elastic-hq",
							"elastic-search",
							"fluentd",
							"kibana"
						]
					},
					"csap-monitoring": {
						"ui_anonymous": "true",
						"found-in": [
							"csap-package-monitoring"
						]
					},
					"csap-monitoring-defaults": {
						"ui_anonymous": true,
						"data_retention": "3d",
						"data_volume_size": "5Gi",
						"data_storage_class": "$$storage-class"
					},
					"csap-logging-defaults": {
						"$$volume-os": "$$nfs-mount/$$nfs-sub-folder/csap-logging-elastic",
						"$$volume-pv": "$$nfs-path/$$nfs-sub-folder/csap-logging-elastic",
						"$$clean-disk-gb": 20,
						"$$clean-disk-days": 1,
						"$$clean-schedule": "@hourly"
					}
				},
				"csap-collection": {
					"processDumps": {
						"resouceInterval": 30,
						"maxInInterval": 3,
						"lowMemoryInMb": "500"
					},
					"host": [
						30,
						300,
						"3600"
					],
					"os-process": [
						30,
						300,
						3600
					],
					"application": [
						"30",
						300,
						3600
					]
				},
				"reports": {
					"trending": [
						{
							"label": "Kubernetes: html hits (SpringBoot, 1000s)",
							"report": "application",
							"metric": "LandingCount",
							"serviceName": "test-k8s-csap-reference",
							"divideBy": "1000"
						},
						{
							"label": "Kubernetes: JMS Messages (mq, 1000s)",
							"report": "application",
							"metric": "JmsCount",
							"serviceName": "test-k8s-csap-reference",
							"divideBy": "1000"
						},
						{
							"label": "Kubernetes: DB Inserts (Postgres, 1000s)",
							"report": "application",
							"metric": "Inserts",
							"serviceName": "test-k8s-postgres",
							"divideBy": "1000"
						},
						{
							"label": "Kubernetes: Postgres CPU",
							"report": "os-process",
							"metric": "topCpu",
							"serviceName": "test-k8s-postgres",
							"divideBy": "numberOfSamples"
						},
						{
							"label": "Docker Test: JMS Messages",
							"report": "application",
							"metric": "JmsRate",
							"serviceName": "test-docker-csap-reference",
							"divideBy": "numberOfSamples"
						},
						{
							"label": "Docker Test: JMS Messages(ms)",
							"report": "application",
							"metric": "JmsMs",
							"serviceName": "test-docker-csap-reference",
							"divideBy": "numberOfSamples"
						},
						{
							"label": "Csap Events Posted Latency (ms)",
							"report": "application",
							"metric": "EventPostMeanMs",
							"serviceName": "events-service",
							"divideBy": "numberOfSamples"
						},
						{
							"label": "Csap Events Posted Per Minute",
							"report": "application",
							"metric": "EventPostRate",
							"serviceName": "events-service",
							"divideBy": "numberOfSamples,0.5",
							"allVmTotal": true
						},
						{
							"label": "Csap Events Posted Per Day",
							"report": "application",
							"metric": "EventPostRate",
							"serviceName": "events-service"
						},
						{
							"label": "Csap Events Java Http Requests",
							"report": "java",
							"metric": "httpRequestCount",
							"serviceName": "events-service",
							"allVmTotal": true
						},
						{
							"label": "CSAP User Activity",
							"report": "application",
							"metric": "UserActivity",
							"serviceName": "events-service",
							"allVmTotal": true
						},
						{
							"label": "Users: Concurrent (Admin)",
							"report": "java",
							"metric": "sessionsActive",
							"serviceName": "csap-admin",
							"divideBy": "numberOfSamples",
							"allVmTotal": true
						},
						{
							"label": "Users: Daily Sessions (Admin)",
							"report": "java",
							"metric": "sessionsCount",
							"serviceName": "csap-admin"
						},
						{
							"label": "DataAdmin Http Requests",
							"report": "java",
							"metric": "httpRequestCount",
							"serviceName": "events-service,admin"
						},
						{
							"label": "WebServer (Httpd) Requests",
							"report": "application",
							"metric": "UrlsProcessed",
							"serviceName": "httpd"
						},
						{
							"label": "Admin UI Sessions",
							"report": "java",
							"metric": "sessionsCount",
							"serviceName": "csap-admin",
							"allVmTotal": true
						},
						{
							"label": "Events Metrics DB (GB)",
							"report": "application",
							"metric": "MetricsDbStorageMb",
							"serviceName": "events-service",
							"divideBy": "numberOfSamples,1024"
						},
						{
							"label": "Events DB Cpu (top)",
							"report": "os-process",
							"metric": "topCpu",
							"serviceName": "events-mongo",
							"divideBy": "numberOfSamples"
						},
						{
							"label": "Events DB Inserts",
							"report": "application",
							"metric": "Inserts",
							"serviceName": "events-mongo"
						},
						{
							"label": "Mongo Tiger Reads Mb",
							"report": "application",
							"metric": "DiskReads",
							"serviceName": "events-mongo",
							"divideBy": "numberOfSamples,1024"
						},
						{
							"label": "Mongo Tiger Writes Mb",
							"report": "application",
							"metric": "DiskWrites",
							"serviceName": "events-mongo",
							"divideBy": "numberOfSamples,1024"
						},
						{
							"label": "Mongo Tiger Evictions",
							"report": "application",
							"metric": "TigerCacheUnmodified",
							"serviceName": "events-mongo",
							"divideBy": "numberOfSamples,1024"
						},
						{
							"label": "csap-agent os commands",
							"report": "application",
							"metric": "OsCommandsCounter",
							"serviceName": "csap-agent",
							"divideBy": "numberOfSamples"
						},
						{
							"label": "csap-agent sockets",
							"report": "os-process",
							"metric": "socketCount",
							"serviceName": "csap-agent",
							"divideBy": "numberOfSamples"
						}
					],
					"realTimeMeters": [
						{
							"label": "Kubernetes Events",
							"id": "application.kubelet.eventCount",
							"intervals": [
								0,
								7,
								20
							],
							"min": 0,
							"divideBy": "host-count",
							"healthMeter": [
								true,
								0,
								20
							]
						},
						{
							"label": "Cpu Cores Active",
							"id": "host.coresActive",
							"intervals": [
								7,
								8,
								9
							],
							"min": 0,
							"about": "New item",
							"healthMeter": [
								false,
								0,
								4
							]
						},
						{
							"label": "Cpu Response (s)",
							"id": "host.cpuTest",
							"intervals": [
								6,
								7,
								8
							],
							"min": 0,
							"divideBy": "host-count",
							"healthMeter": [
								true,
								1,
								7
							]
						},
						{
							"label": "Disk Response (s)",
							"id": "host.diskTest",
							"intervals": [
								4,
								5,
								6
							],
							"min": 0,
							"divideBy": "host-count",
							"healthMeter": [
								true,
								1,
								5
							]
						},
						{
							"label": "Ingress Connections",
							"id": "os-process.socketCount_ingress-nginx",
							"intervals": [
								100,
								120,
								140
							],
							"min": 0
						},
						{
							"label": "csap reference host pods",
							"id": "application.kubelet.testk8scsapreferencecontainerInstances",
							"intervals": [
								0,
								7,
								10
							],
							"min": 0,
							"healthMeter": [
								true,
								0,
								15
							]
						},
						{
							"label": "Events Per Minute",
							"id": "application.events-service.EventPostRate",
							"intervals": [
								200,
								250,
								300
							],
							"multiplyBy": "2"
						},
						{
							"label": "Event Latency(ms)",
							"id": "application.events-service.EventPostMeanMs",
							"divideBy": "host-count",
							"intervals": [
								30,
								40,
								50
							]
						},
						{
							"label": "test-k8 Cpu (Total)",
							"id": "os-process.topCpu_test-k8s-csap-reference",
							"intervals": [
								200,
								300,
								400
							]
						},
						{
							"label": "K8 Messages per second",
							"id": "application.test-k8s-csap-reference.JmsCount",
							"intervals": [
								100,
								200,
								300
							],
							"divideBy": "30"
						},
						{
							"label": "k8 Message Latency(ms)",
							"id": "application.test-k8s-csap-reference.JmsMs",
							"intervals": [
								40,
								50,
								60
							]
						},
						{
							"label": "k8 Postgres Inserts per Second",
							"id": "application.test-k8s-postgres.Inserts",
							"intervals": [
								350,
								360,
								370
							],
							"divideBy": "30"
						},
						{
							"label": "CsAgent Cpu (Total)",
							"id": "os-process.topCpu_csap-agent",
							"intervals": [
								20,
								30,
								40
							]
						},
						{
							"label": "test-docker Cpu (Total)",
							"id": "os-process.topCpu_test-docker-csap-reference",
							"intervals": [
								10,
								30,
								100
							]
						},
						{
							"label": "Docker Messages per second",
							"id": "application.test-docker-csap-reference.JmsRate",
							"intervals": [
								20,
								50,
								200
							]
						},
						{
							"label": "Docker Message Latency (ms)",
							"id": "application.test-docker-csap-reference.JmsMs",
							"intervals": [
								20,
								50,
								200
							]
						},
						{
							"label": "csap-agent heartbeat  (ms)",
							"id": "application.csap-agent.AdminPingsMeanMs",
							"disableScaling": true,
							"intervals": [
								3000,
								4000,
								5000
							],
							"divideBy": "host-count"
						},
						{
							"label": "csap-agent java heap (mb)",
							"id": "java.heapUsed_csap-agent",
							"disableScaling": true,
							"intervals": [
								500,
								700,
								1000
							],
							"divideBy": "host-count"
						}
					]
				},
				"loadBalanceVmFilter": [
					"none"
				],
				"old-csapData": {
					"eventUrl": "http://csap-dev01.***REMOVED***:8080/events-data-service/api/event",
					"eventApiUrl": "http://csap-dev01.***REMOVED***:8080/events-data-service/eventApi",
					"eventMetricsUrl": "http://csap-dev01.***REMOVED***:8080/events-analytics-service/api/metrics/",
					"analyticsUiUrl": "http://csap-dev01.***REMOVED***:8080/admin/os/performance",
					"historyUiUrl": "http://csap-dev01.***REMOVED***:8080/events-data-service?appId={appId}\u0026life={life}\u0026category={category}\u0026",
					"user": "SensusCsap",
					"pass": "pAH+tsfwU/kgW+34WPXQW/8Z0a9SJpXq8dNOirMmUxM="
				},
				"monitoringUrl": "http://csap-dev01.***REMOVED***/events-service/analytics",
				"mavenCommand": "-B -Dmaven.test.skip=true clean package",
				"newsItems": [
					"News items may be added using Application Editor."
				],
				"portRange": {
					"start": 8200,
					"end": 9300
				},
				"secureUrl": "https://csap-secure.***REMOVED***/admin",
				"autoRestartHttpdOnClusterReload": "yes",
				"launchUrls": [
					{
						"description": "http(Tomcat Embed)",
						"url": "default"
					},
					{
						"description": "ajp(LB - Internal)",
						"url": "http://csap-dev01.***REMOVED***"
					}
				],
				"metricsPublication": [
					{
						"type": "csap-health-report",
						"intervalInSeconds": 300,
						"url": "csap-health-report-uses-csap-events-url",
						"token": "csap-health-report-uses-csap-events-credentials"
					}
				],
				"lastModifiedBy": "pnightingale",
				"application-disks": [
					{
						"name": "shared disk",
						"cluster": "kubernetes-provider",
						"path": "/mnt/CSAP_DEV01_NFS"
					}
				],
				"loadbalancer-url": "http://csap-dev01.***REMOVED***:8080"
			},
			"base-os": {
				"description": "core services installed on every host",
				"type": "simple",
				"template-references": [
					"csap-agent",
					"service-from-file",
					"csap-demo-mpstat",
					"csap-package-java",
					"csap-package-linux",
					"csap-verify-service",
					"docker"
				],
				"notes": "core services for all hosts",
				"lastModifiedBy": "pnightingale"
			}
		},
		"dev": {
			"settings": {
				"imports": [
					"defaults"
				],
				"loadbalancer-url": "http://csap-dev01.***REMOVED***:8080",
				"configuration-maps": {
					"global": {
						"allowRemoteJmx": "true",
						"isJmxAuthentication": "true",
						"jmxUser": "csap",
						"jmxPassword": "csap",
						"test-global-1": "test-global-value-1",
						"found-in": [
							"* all services"
						]
					},
					"httpd": {
						"configureAsToolServer": "true",
						"httpdDocFolder": "$$nfs-mount/csap-web-server",
						"createPort80Tunnel": true,
						"found-in": [
							"httpd"
						]
					},
					"csap-sso": {
						"csapUserSecret": "d437dcbe-d37d-422b-9039-b6705e4cf8fa",
						"csapServiceSecret": "8dd6d776-d071-496c-9e51-3fbdfb547c6e",
						"oathHostPort": "csap-dev01.***REMOVED***:8090",
						"openIdIssuerUri": "http://csap-dev01.***REMOVED***:8090/auth/realms/csap-default",
						"csap_view_role": "AUTHENTICATED",
						"csap_admin_role": "AUTHENTICATED",
						"csap_build_role": "AUTHENTICATED",
						"csap_infra_role": "AUTHENTICATED",
						"found-in": [
							"csap-admin",
							"csap-agent",
							"csap-verify-service",
							"events-service"
						]
					},
					"docker": {
						"allowRemote": "true",
						"neverRemoteHosts": "csap-dev01,csap-dev02",
						"dockerGcHours": "24",
						"dockerRepo": "http://media.***REMOVED***/media/third_party/linux/CentOS/docker-ce.repo",
						"found-in": [
							"docker"
						]
					},
					"kubelet": {
						"clusterToken": "584t76.b0b7c7r75rbc0ml0",
						"masterBackupFolder": "$$nfs-mount/kubernetes-backups",
						"default-yes-singleMasterUntaint": "no",
						"kubernetesRepo": "http://media.***REMOVED***/media/third_party/kubernetes/kubernetes-el7.repo",
						"kubernetesRepoSensus": "http://media.***REMOVED***/media/third_party/kubernetes/kubernetes-el7.repo",
						"kubernetesRepoGoogle": "https://packages.cloud.google.com/yum",
						"found-in": [
							"kubelet"
						]
					},
					"ingress-nginx": {
						"$$ingress-host": "*.***REMOVED***",
						"$$ingress-node-selector": "\"kubernetes.io/os\": linux",
						"$$ingress-http-port": 80,
						"$$ingress-https-port": 443,
						"found-in": [
							"kibana",
							"kubelet",
							"ingress-nginx",
							"test-k8s-by-spec",
							"test-k8s-csap-reference"
						]
					},
					"storage-settings": {
						"about-type": "vsphere or nfs can be used",
						"$$storage-type": "nfs",
						"$$storage-class": "csap-nfs-storage-1",
						"$$storage-folder": "csap-dev-platform-storage",
						"$$vsphere-datastore": "CSAP_DS1_NFS",
						"$$nfs-server": "10.22.10.59",
						"$$nfs-sub-folder": "$$csap-environment",
						"$$nfs-path": "/CSAP_DEV01_NFS",
						"$$nfs-mount": "/mnt/CSAP_DEV01_NFS",
						"$$nfs-options": "",
						"$$nfs-provisioner": "kubernetes-pvcs-csap-platform",
						"$$disk-activemq": "2G",
						"$$disk-postgres": "20G",
						"found-in": [
							"csap-package-logging",
							"csap-package-monitoring",
							"csap-screen-caster",
							"elastic-hq",
							"elastic-search",
							"events-mongo",
							"events-mongo-beta",
							"events-service-beta",
							"fluentd",
							"httpd",
							"kibana",
							"kubelet",
							"nfs-client-provisioner",
							"test-k8s-by-spec"
						]
					},
					"csap-events-beta": {
						"mongoHosts": "$$csap-hosts:events-mongo-beta",
						"use-for-localmongo-storage": "/opt/csap/$$service-name-volume",
						"MONGO_UTIL": "csap/csap-mongo:latest",
						"mongoSourceHost": "csap-dev02.***REMOVED***",
						"metricDbSizeInGb": "30",
						"eventDbSizeInGb": "10",
						"dataServiceUrl": "http://csap-dev03.***REMOVED***:7011/events-service/api/event",
						"found-in": [
							"events-mongo-beta",
							"events-service-beta"
						]
					},
					"csap-events": {
						"mongoUserNeeded": "ForImageAndBoot",
						"mongoUser": "dataBaseReadWriteUser",
						"mongoPassword": "ikS+e8JgH07FPqGIprwwawHHId9i4+K2",
						"mongoHosts": "$$csap-hosts:events-mongo",
						"$$mongo-storage": "$$nfs-mount/$$service-name-volume",
						"notUsed_dataServiceUrl": "http://csap-dev01.***REMOVED***:8080/events-service/api/event",
						"restToken": "_***REMOVED***Integration",
						"dataServiceUser": "dataUser",
						"dataServicePass": "_***REMOVED***Integration",
						"metricDbSizeInGb": "50",
						"eventDbSizeInGb": "10",
						"MONGO_UTIL": "csap/csap-mongo:latest",
						"MONGO_INITDB_ROOT_USERNAME": "dataBaseReadWriteUser",
						"MONGO_INITDB_ROOT_PASSWORD": "doDecode:ikS+e8JgH07FPqGIprwwawHHId9i4+K2",
						"found-in": [
							"events-mongo",
							"events-mongo-beta",
							"events-service",
							"events-service-beta"
						]
					},
					"map-for-testing": {
						"test-map-name-1": "test-map-value-1",
						"found-in": []
					}
				},
				"vsphere": {
					"filters": {
						"vm-path": "RNIs/CSAP-DEV_p/csap-dev/",
						"datastore-regex": "(.*)CSAP(.*)"
					},
					"env": {
						"GOVC_USERNAME": "lab\\csapstorage",
						"GOVC_PASSWORD": "4O6EmXt6RCQ0f8W5DTqPcCMC1fp1rWKy3o6rZICEgdk=",
						"GOVC_URL": "vcenter6.***REMOVED***",
						"GOVC_DATACENTER": "***REMOVED***",
						"GOVC_DATASTORE": "CSAP_DS1_NFS",
						"GOVC_INSECURE": "1"
					}
				},
				"lastModifiedBy": "pnightingale",
				"csap-collection": {
					"kubernetes": [
						"test-k8s-csap-reference-container",
						"test-k8s-postgres-container",
						"test-k8s-activemq-container",
						"elastic-search-container",
						"fluentd-container",
						"ingress-nginx"
					]
				},
				"application": {
					"definition-abort-on-version": "true",
					"quick-launches": [
						{
							"label": "CSAP Adoption Portal",
							"description": "Launch CSAP Adoption Portal to review tenant metrics",
							"service": "events-service",
							"path": "/analytics"
						},
						{
							"label": "CSAP Events Portal",
							"description": "Launch CSAP Events Portal to review tenant metrics",
							"service": "events-service"
						},
						{
							"label": "Kubernetes Explorer",
							"description": "Launch CSAP Kubernetes explorer",
							"service": "kubelet"
						},
						{
							"service": "csap-agent"
						},
						{
							"service": "grafana"
						},
						{
							"service": "alertmanager"
						},
						{
							"service": "prometheus",
							"path": "/targets"
						},
						{
							"label": "Log Analytics",
							"service": "kibana"
						},
						{
							"label": "k8 dashboard",
							"service": "kubernetes-dashboard"
						}
					],
					"k8s-yaml-replacements": [
						{
							"original": "is testing",
							"replacement": "is now testing"
						},
						{
							"original": "image: demo.quay.io/",
							"replacement": "image: your-server/"
						}
					]
				},
				"kubernetes": {
					"certificate-minimum-days": "300"
				}
			},
			"base-os": {
				"hosts": [
					"csap-dev01",
					"csap-dev02",
					"csap-dev03",
					"csap-dev04",
					"csap-dev05",
					"csap-dev06",
					"csap-dev20"
				]
			},
			"csap-mgmt-extra": {
				"notes": "Events arbiter, tests, etc",
				"type": "simple",
				"hosts": [
					"csap-dev01"
				],
				"template-references": [
					"csap-demo-tomcat",
					"csap-package-tomcat",
					"csap-screen-caster",
					"csap-test-docker-traffic",
					"csap-test-k8s-traffic",
					"keycloak",
					"nfs-server"
				],
				"lastModifiedBy": "pnightingale"
			},
			"csap-management": {
				"type": "modjk",
				"hosts": [
					"csap-dev01",
					"csap-dev02"
				],
				"template-references": [
					"ha-proxy-kubernetes",
					"httpd",
					"csap-admin"
				]
			},
			"docker-verification": {
				"type": "modjk",
				"hosts": [
					"csap-dev03"
				],
				"template-references": [
					"keycloak-beta",
					"test-docker-activemq",
					"test-docker-csap-reference",
					"test-docker-nginx",
					"test-docker-pgadmin",
					"test-docker-postgres"
				],
				"lastModifiedBy": "pnightingale"
			},
			"kubernetes-provider": {
				"type": "kubernetes-provider",
				"monitors": {},
				"hosts": [
					"csap-dev04",
					"csap-dev05",
					"csap-dev06"
				],
				"notes": "kubernetes provider",
				"masters": [
					"csap-dev04"
				],
				"template-references": [
					"csap-package-monitoring",
					"kubelet"
				]
			},
			"kubernetes-system-services": {
				"monitors": {
					"max_socketCount": "550"
				},
				"type": "kubernetes",
				"kubernetes-provider": "kubernetes-provider",
				"kubernetes-namespace": "kube-system",
				"template-references": [
					"calico-kube-controllers",
					"calico-node",
					"coredns",
					"dashboard-metrics-scraper",
					"etcd",
					"kube-apiserver",
					"kube-controller-manager",
					"kube-proxy",
					"kube-scheduler",
					"kubernetes-dashboard",
					"metrics-server",
					"nfs-client-provisioner",
					"ingress-nginx"
				],
				"lastModifiedBy": "pnightingale"
			},
			"kubernetes-csap-test": {
				"type": "kubernetes",
				"hosts": [],
				"kubernetes-provider": "kubernetes-provider",
				"kubernetes-namespace": "csap-test",
				"template-references": [
					"test-k8s-activemq",
					"test-k8s-by-spec",
					"test-k8s-csap-reference",
					"test-k8s-postgres"
				],
				"lastModifiedBy": "pnightingale"
			},
			"csap-events": {
				"hosts": [
					"csap-dev02"
				],
				"type": "modjk",
				"template-references": [
					"events-mongo",
					"events-service",
					"csap-simple"
				],
				"lastModifiedBy": "pnightingale"
			},
			"beta-csap-events": {
				"type": "simple",
				"hosts": [
					"csap-dev03"
				],
				"template-references": [
					"events-mongo-beta",
					"events-service-beta"
				]
			},
			"csap-autoplays": {
				"type": "simple",
				"hosts": [
					"csap-dev01"
				],
				"template-references": [
					"csap-package-logging"
				]
			},
			"rni-monitor": {
				"type": "kubernetes",
				"template-references": [
					"rni-1"
				],
				"hosts": [],
				"lastModifiedBy": "pnightingale"
			},
			"csap-monitoring": {
				"type": "kubernetes",
				"kubernetes-provider": "kubernetes-provider",
				"kubernetes-namespace": "csap-monitoring",
				"template-references": [
					"alertmanager",
					"grafana",
					"prometheus",
					"monitoring-tools"
				]
			},
			"csap-logging-cluster": {
				"type": "kubernetes",
				"kubernetes-provider": "kubernetes-provider",
				"kubernetes-namespace": "csap-logging",
				"template-references": [
					"elastic-search",
					"elastic-hq",
					"fluentd",
					"kibana"
				]
			}
		},
		"stage": {
			"settings": {
				"imports": [
					"defaults"
				],
				"loadbalancer-url": "",
				"configuration-maps": null
			},
			"base-os": {
				"hosts": [
					"csap-stg01"
				]
			}
		}
	},
	"service-templates": {
		"csap-demo-mpstat": {
			"server": "os",
			"description": "demo service monitor for tracking csap agent use of mpstat xxx",
			"docUrl": "https://linux.die.net/man/1/mpstat",
			"propDirectory": "/",
			"processFilter": ".*mpstat.*",
			"alerts": {
				"max_diskUtil": "20g"
			},
			"logDirectory": "/var/logs",
			"logRegEx": ".*\\.log",
			"url": "https://linux.die.net/man/1/mpstat",
			"scmVersion": "os",
			"disk": "/dev/mapper"
		},
		"csap-screen-caster": {
			"server": "docker",
			"autoStart": 400,
			"port": 7080,
			"description": "provide csap screencasts",
			"alerts": {
				"max_diskUtil": "2g",
				"max_threadCount": "200",
				"max_socketCount": "15"
			},
			"environmentVariables": {
				"configuration-maps": [
					"storage-settings"
				]
			},
			"scheduledJobs": {
				"scripts": [
					{
						"description": "Copy resource files to working directory for container mounting",
						"frequency": "event-pre-start",
						"script": "rm -rf $csapWorkingDir/resources; cp --recursive --verbose $csapResourceFolder $csapWorkingDir/resources"
					},
					{
						"description": "test and reload configuration",
						"frequency": "on-demand",
						"script": "docker container exec  csap-screen-caster nginx -t \u0026\u0026 docker container exec  csap-screen-caster nginx -s reload"
					},
					{
						"description": "Show configuration",
						"frequency": "on-demand",
						"script": "docker container exec  csap-screen-caster nginx -V 2\u003E\u00261"
					}
				]
			},
			"docker": {
				"image": "nginx:1.16.1",
				"volumes": [
					{
						"about": "configuration folder",
						"containerMount": "/etc/nginx/nginx.conf",
						"readOnly": true,
						"sharedUser": false,
						"hostPath": "$$service-working/resources/common/nginx.conf"
					},
					{
						"about": "Screencasts",
						"containerMount": "/usr/share/nginx/html",
						"readOnly": true,
						"sharedUser": false,
						"local-not-usedhostPath": "/opt/csap/screencasts",
						"hostPath": "$$nfs-mount/csap-web-server/screencasts"
					}
				],
				"portMappings": [
					{
						"about": "screencast port",
						"PrivatePort": "80",
						"PublicPort": "$$service-primary-port"
					}
				]
			},
			"performance": {
				"config": {
					"httpCollectionUrl": "http://localhost:$$service-primary-port/status",
					"patternMatch": "byWordIndex"
				},
				"activeConnections": {
					"title": "Active Connections",
					"attribute": 3
				},
				"serverAccepts": {
					"title": "Server Accepts",
					"attribute": 8,
					"delta": true
				},
				"serverHandled": {
					"title": "Server Handled",
					"attribute": 9,
					"delta": true
				},
				"serverRequests": {
					"title": "Server Requests",
					"attribute": 10,
					"delta": true
				},
				"Reading": {
					"title": "Reading",
					"attribute": 12
				},
				"Writing": {
					"title": "Writing",
					"attribute": 14
				},
				"Waiting": {
					"title": "Waiting",
					"attribute": 16
				}
			},
			"url": "http://$$service-fqdn-host:$$service-primary-port,http://$$service-fqdn-host:$$service-primary-port/status",
			"lastModifiedBy": "pnightingale"
		},
		"csap-test-docker-traffic": {
			"server": "csap-api",
			"description": "runs nightly and on demand docker load tests",
			"docUrl": "https://***REMOVED***.atlassian.net/wiki/spaces/CSAP/pages/258211854/Docker+Integration+Tests",
			"propDirectory": "$$service-working/docker-performance",
			"processFilter": ".*$$service-name.*",
			"alerts": {
				"max_diskUtil": "2g"
			},
			"environmentVariables": {
				"testFolder": "$$service-working/docker-performance",
				"time_in_minutes": "60",
				"testServices": "test-docker-csap-reference"
			},
			"source": {
				"scm": "git",
				"path": "https://moc-bb.***REMOVED***/bitbucket/scm/csap/csap-starter.git",
				"branch": "HEAD",
				"buildLocation": "/csap-traffic-test"
			},
			"maven": {
				"dependency": "org.csap:csap-starter-traffic:2-SNAPSHOT:zip"
			},
			"defaultLogToShow": "mavenVerify.txt",
			"scheduledJobs": {
				"scripts": [
					{
						"description": "Load test",
						"frequency": "daily",
						"background": false,
						"hour": "06",
						"script": "$$csap-base/bin/admin-run-load-test.sh"
					}
				],
				"diskCleanUp": [
					{
						"path": "$$service-working/jmeter/reports",
						"olderThenDays": 7,
						"pruneByFolder": true,
						"maxDepth": 1
					},
					{
						"path": "$$service-working/jmeter/results",
						"olderThenDays": 1,
						"pruneEmptyFolders": true,
						"maxDepth": 10
					}
				]
			},
			"lastModifiedBy": "pnightingale"
		},
		"csap-test-k8s-traffic": {
			"server": "csap-api",
			"description": "runs nightly and on demand kubernetes load tests",
			"docUrl": "https://***REMOVED***.atlassian.net/wiki/spaces/CSAP/pages/347079099/Kubernetes+Integration+Tests",
			"propDirectory": "$$service-working/kubernetes-performance",
			"processFilter": ".*$$service-name.*",
			"alerts": {
				"max_diskUtil": "5g"
			},
			"environmentVariables": {
				"testFolder": "$$service-working/kubernetes-performance",
				"time_in_minutes": "60",
				"testServices": "test-k8s-csap-reference"
			},
			"source": {
				"scm": "git",
				"path": "https://moc-bb.***REMOVED***/bitbucket/scm/csap/csap-starter.git",
				"branch": "HEAD",
				"buildLocation": "/csap-traffic-test"
			},
			"maven": {
				"dependency": "org.csap:csap-starter-traffic:2-SNAPSHOT:zip"
			},
			"defaultLogToShow": "mavenVerify.txt",
			"scheduledJobs": {
				"scripts": [
					{
						"description": "Load test",
						"frequency": "daily",
						"background": false,
						"hour": "07",
						"script": "$$csap-base/bin/admin-run-load-test.sh"
					}
				],
				"diskCleanUp": [
					{
						"path": "$$service-working/jmeter/reports",
						"olderThenDays": 7,
						"pruneByFolder": true,
						"maxDepth": 1
					},
					{
						"path": "$$service-working/jmeter/results",
						"olderThenDays": 1,
						"pruneEmptyFolders": true,
						"maxDepth": 10
					}
				]
			},
			"lastModifiedBy": "pnightingale"
		},
		"events-mongo-beta": {
			"description": "beta mongo provider for events",
			"copySource": "events-mongo"
		},
		"events-service-beta": {
			"copySource": "events-service"
		},
		"keycloak": {
			"server": "docker",
			"autoStart": "55",
			"port": 8090,
			"description": "provide openid services used in csap-dev",
			"propDirectory": "/opt/jboss/keycloak",
			"alerts": {
				"max_threadCount": "220",
				"max_fileCount": "700",
				"max_diskWriteKb": "100",
				"max_socketCount": "30"
			},
			"environmentVariables": {
				"csapRealm": "csap-default",
				"csapUserSecret": "d437dcbe-d37d-422b-9039-b6705e4cf8fa",
				"csapServiceSecret": "8dd6d776-d071-496c-9e51-3fbdfb547c6e",
				"csapBindCredential": "nqKxrFW96RtZhFkph3Yd",
				"KEYCLOAK_USER": "admin",
				"KEYCLOAK_PASSWORD": "admin",
				"KEYCLOAK_IMPORT": "/scripts/csap-default-realm.json"
			},
			"deployTimeoutMinutes": "10",
			"logJournalServices": "docker",
			"scheduledJobs": {
				"scripts": [
					{
						"description": "run script on demand",
						"frequency": "onDemand",
						"script": "$$csap-base/bin/checkLimits.sh"
					},
					{
						"description": "run keycloak setup scripts",
						"frequency": "event-post-start",
						"script": "$$service-working/resources/common/run-keycloak-cli.sh"
					},
					{
						"description": "Copy resource files to working directory",
						"frequency": "event-pre-start",
						"script": "rm -rf $csapWorkingDir/resources; cp --recursive --verbose $csapResourceFolder $csapWorkingDir/resources"
					}
				]
			},
			"docker": {
				"image": "jboss/keycloak:12.0.4",
				"portMappings": [
					{
						"PrivatePort": "8080",
						"PublicPort": "$$service-primary-port"
					}
				],
				"versionCommand": "cat /opt/jboss/keycloak/version.txt |awk \u0027{print $4};\u0027",
				"volumes": [
					{
						"about": "csap default realm definition",
						"containerMount": "/scripts",
						"readOnly": true,
						"sharedUser": true,
						"hostPath": "$$service-working/resources/common",
						"createPersistent": {
							"enabled": true,
							"driver": "host"
						}
					},
					{
						"about": "csap theme",
						"containerMount": "/opt/jboss/keycloak/themes/csap",
						"readOnly": true,
						"sharedUser": true,
						"hostPath": "$$service-working/resources/themes/csap",
						"createPersistent": {
							"enabled": true,
							"driver": "host"
						}
					}
				]
			},
			"url": "http://$$service-fqdn-host:$$service-primary-port/auth/admin",
			"lastModifiedBy": "pnightingale"
		},
		"keycloak-beta": {
			"server": "docker",
			"autoStart": "70",
			"port": 8095,
			"description": "provide openid services used in csap-dev BETA",
			"propDirectory": "/opt/jboss/keycloak",
			"alerts": {
				"max_threadCount": "240",
				"max_fileCount": "600",
				"max_diskWriteKb": "100"
			},
			"environmentVariables": {
				"csapRealm": "csap-default",
				"csapUserSecret": "d437dcbe-d37d-422b-9039-b6705e4cf8fa",
				"csapServiceSecret": "8dd6d776-d071-496c-9e51-3fbdfb547c6e",
				"csapBindCredential": "nqKxrFW96RtZhFkph3Yd",
				"KEYCLOAK_USER": "admin",
				"KEYCLOAK_PASSWORD": "admin",
				"KEYCLOAK_IMPORT": "/scripts/csap-default-realm.json"
			},
			"deployTimeoutMinutes": "10",
			"logJournalServices": "docker",
			"scheduledJobs": {
				"scripts": [
					{
						"description": "run script on demand",
						"frequency": "onDemand",
						"script": "$$csap-base/bin/checkLimits.sh"
					},
					{
						"description": "run keycloak setup scripts",
						"frequency": "event-post-start",
						"script": "$$service-working/resources/common/run-keycloak-cli.sh"
					},
					{
						"description": "Copy resource files to working directory",
						"frequency": "event-pre-start",
						"script": "rm -rf $csapWorkingDir/resources; cp --recursive --verbose $csapResourceFolder $csapWorkingDir/resources"
					}
				]
			},
			"docker": {
				"image": "jboss/keycloak:12.0.4",
				"portMappings": [
					{
						"PrivatePort": "8080",
						"PublicPort": "$$service-primary-port"
					}
				],
				"versionCommand": "cat /opt/jboss/keycloak/version.txt |awk \u0027{print $4};\u0027",
				"volumes": [
					{
						"about": "csap default realm definition",
						"containerMount": "/scripts",
						"readOnly": true,
						"sharedUser": true,
						"hostPath": "$$service-working/resources/common",
						"createPersistent": {
							"enabled": true,
							"driver": "host"
						}
					},
					{
						"about": "csap theme",
						"containerMount": "/opt/jboss/keycloak/themes/csap",
						"readOnly": true,
						"sharedUser": true,
						"hostPath": "$$service-working/resources/themes/csap",
						"createPersistent": {
							"enabled": true,
							"driver": "host"
						}
					}
				]
			},
			"url": "http://$$service-fqdn-host:$$service-primary-port/auth/admin",
			"lastModifiedBy": "pnightingale"
		},
		"nfs-server": {
			"server": "docker",
			"autoStart": 401,
			"description": "demo of docker run command and others",
			"scheduledJobs": {
				"scripts": [
					{
						"description": "run script on demand",
						"frequency": "event-pre-start",
						"script": "mkdir --verbose $HOME/docker-nfs-export;"
					}
				]
			},
			"docker": {
				"image": "itsthenetwork/nfs-server-alpine:12",
				"run": "-d --name $$service-name --privileged -v $HOME/docker-nfs-export:/nfsshare -e SHARED_DIRECTORY=/nfsshare $$service-image"
			}
		},
		"test-docker-activemq": {
			"server": "docker",
			"autoStart": 81,
			"port": 8161,
			"description": "activemq docker instance providing JMS messaging  ",
			"docUrl": "https://hub.docker.com/r/webcenter/activemq/",
			"appDirectory": "/opt/activemq",
			"propDirectory": "/opt/activemq/bin",
			"processFilter": "/usr/bin/java.*",
			"alerts": {
				"max_diskUtil": "900m"
			},
			"isMessaging": "true",
			"jmxPort": "8162",
			"logDirectory": "/var/log/activemq",
			"defaultLogToShow": "activemq.log",
			"docker": {
				"image": "csap/csap-activemq:webcenter",
				"entryPoint": [
					""
				],
				"command": [
					"/app/run.sh"
				],
				"workingDirectory": "/opt/activemq",
				"networkMode": "host",
				"versionCommand": "ls /opt/activemq/*.jar | cut -d- -f3 | cat | rev | cut --characters 5- | rev",
				"environmentVariables": [
					"csapJmxOpts=-DcsapJmxPort=$$service-jmx-port",
					"ACTIVEMQ_CONFIG_MINMEMORY=512",
					"ACTIVEMQ_CONFIG_MAXMEMORY=767"
				],
				"volumes": [
					{
						"containerMount": "/data/activemq",
						"hostPath": "",
						"readOnly": false,
						"sharedUser": true
					},
					{
						"containerMount": "/opt/activemq/conf",
						"hostPath": "",
						"readOnly": false,
						"sharedUser": true
					},
					{
						"containerMount": "/var/log/activemq",
						"hostPath": "",
						"readOnly": false,
						"sharedUser": true
					}
				],
				"portMappings": [
					{
						"PrivatePort": "1883",
						"PublicPort": "1883"
					},
					{
						"PrivatePort": "5672",
						"PublicPort": "5672"
					},
					{
						"PrivatePort": "61613",
						"PublicPort": "61613"
					},
					{
						"PrivatePort": "61614",
						"PublicPort": "61614"
					},
					{
						"PrivatePort": "61616",
						"PublicPort": "61616"
					},
					{
						"PrivatePort": "$$service-primary-port",
						"PublicPort": "$$service-primary-port"
					}
				],
				"limits": {
					"cpuCoresMax": 3,
					"logs": {
						"type": "json-file",
						"max-size": "10m",
						"max-file": "2"
					}
				},
				"network": {
					"name": "csap-test-network",
					"note": "name can be bridge, host, or custom network name",
					"createPersistent": {
						"enabled": true,
						"driver": "bridge"
					}
				}
			},
			"performance": {
				"TotalVmCpu": {
					"mbean": "java.lang:type=OperatingSystem",
					"attribute": "SystemCpuLoad"
				},
				"ProcessCpu": {
					"mbean": "java.lang:type=OperatingSystem",
					"attribute": "ProcessCpuLoad"
				},
				"jmxHeartbeatMs": {
					"mbean": "org.apache.activemq:type=Broker,brokerName=localhost",
					"attribute": "TotalConsumerCount",
					"title": "Health Check (ms)"
				},
				"TotalConsumerCount": {
					"mbean": "org.apache.activemq:type=Broker,brokerName=localhost",
					"attribute": "TotalConsumerCount"
				},
				"JvmThreadCount": {
					"mbean": "java.lang:type=Threading",
					"attribute": "ThreadCount"
				},
				"CsapReferenceQ": {
					"mbean": "org.apache.activemq:type=Broker,brokerName=localhost,destinationType=Queue,destinationName=csap-test-$$service-host",
					"attribute": "QueueSize"
				},
				"CsapRefmaxTime": {
					"mbean": "org.apache.activemq:type=Broker,brokerName=localhost,destinationType=Queue,destinationName=csap-test-$$service-host",
					"attribute": "MaxEnqueueTime"
				},
				"CsapRefAdded": {
					"mbean": "org.apache.activemq:type=Broker,brokerName=localhost,destinationType=Queue,destinationName=csap-test-$$service-host",
					"attribute": "EnqueueCount",
					"delta": "delta"
				},
				"CsapRefDispatched": {
					"mbean": "org.apache.activemq:type=Broker,brokerName=localhost,destinationType=Queue,destinationName=csap-test-$$service-host",
					"attribute": "DequeueCount",
					"delta": "delta"
				}
			},
			"launchUrl": "http://$$service-host:$$service-primary-port",
			"url": "http://$$service-fqdn-host:$$service-primary-port/",
			"scheduledJobs": {
				"scripts": [
					{
						"description": "Delay for postgres and activemq",
						"frequency": "event-post-start",
						"script": "wait_for_docker_log test-docker-activemq \u0027activemq entered RUNNING state\u0027"
					}
				]
			},
			"lastModifiedBy": "pnightingale"
		},
		"test-docker-csap-reference": {
			"server": "SpringBoot",
			"autoStart": 84,
			"port": "8261",
			"description": "csap docker test service for messaging a",
			"docUrl": "https://***REMOVED***.atlassian.net/wiki/spaces/CSAP/pages/258211854/Docker+Integration+Tests",
			"alerts": {
				"max_diskUtil": "1g",
				"max_threadCount": "200",
				"max_fileCount": "500",
				"max_socketCount": "100",
				"max_rssMemory": "1400m",
				"max_tomcatConnections": "20",
				"max_topCpu": "150"
			},
			"javaWarnings": {
				"jvmThreadCount": {
					"max": 999
				}
			},
			"isTomcatAjp": "true",
			"osProcessPriority": 0,
			"parameters": "-Dspring.profiles.active=CSAP_LIFE,services   -XX:+UseG1GC  -Xms64M -Xmx256M -XX:MaxMetaspaceSize=128M -XX:+ExitOnOutOfMemoryError",
			"environmentVariables": {
				"csapTestQueue": "csap-test-$$service-host",
				"csapSimpleQueue": "csap-simple-$$service-host",
				"jmsHost": "test-docker-activemq",
				"dbHost": "test-docker-postgres"
			},
			"environment-overload": {
				"dev": {},
				"test": {},
				"performace": {},
				"production": {},
				"demoEnv": {
					"parameters": "-Xms2056M -Xmx2056M",
					"maven": {
						"dependency": "org.sample:my-service:2.0.0:jar"
					}
				}
			},
			"jmxPort": "8266",
			"source": {
				"scm": "git",
				"path": "https://moc-bb.***REMOVED***/bitbucket/scm/csap/csap-starter.git",
				"branch": "HEAD",
				"buildLocation": "/csap-starter-tester"
			},
			"maven": {
				"dependency": "org.csap:csap-starter-tester:2-SNAPSHOT:jar"
			},
			"scheduledJobs": {
				"scripts": [
					{
						"description": "Will not work - this is a wrapped container so no logs",
						"frequency": "onDemand",
						"script": "wait_for_docker_log $$service-name \u0027Started Csap_Tester_Application\u0027"
					},
					{
						"description": "simple test script",
						"frequency": "onDemand",
						"script": "$$service-working/jarExtract/BOOT-INF/classes/scripts/test-admin-script.sh"
					},
					{
						"description": "simple ls command",
						"frequency": "onDemand",
						"script": "ls -l"
					}
				],
				"logRotation": [
					{
						"path": "$$service-logs/console.log",
						"settings": "copytruncate,weekly,rotate 3,compress,missingok,size 3M"
					},
					{
						"path": "$$service-logs/warnings.log",
						"lifecycles": "dev,stage,lt",
						"settings": "copytruncate,weekly,rotate 3,compress,missingok,size 1M"
					},
					{
						"path": "$$service-logs/warnings.log",
						"lifecycles": "prod",
						"settings": "copytruncate,weekly,rotate 5,compress,missingok,size 10M"
					}
				],
				"diskCleanUp": [
					{
						"path": "$$service-working/jmeter/reports",
						"olderThenDays": 3,
						"maxDepth": 20
					},
					{
						"path": "$$service-working/logs/serviceJobs/*.log",
						"olderThenDays": 7,
						"maxDepth": 1
					}
				]
			},
			"runUsingDocker": "true",
			"docker": {
				"image": "csap/csap-java:11.0.4.x",
				"entryPoint": [],
				"command": [],
				"workingDirectory": "/_working",
				"runUser": "$csapUser",
				"environmentVariables": [
					"CLASSPATH=/_working/jarExtract",
					"javaOptions=$$service-parameters -DcsapDockerJava org.springframework.boot.loader.JarLauncher --server.servlet.context-path=/$$service-context --server.port=$$service-primary-port \u003E\u003E logs/console.log 2\u003E\u00261"
				],
				"volumes": [
					{
						"hostPath": "$$service-working",
						"containerMount": "/_working",
						"readOnly": false,
						"sharedUser": true
					},
					{
						"hostPath": "csaptest-local-volume",
						"createPersistent": {
							"enabled": true,
							"driver": "local"
						},
						"containerMount": "/my-demo-local-mount",
						"readOnly": false,
						"sharedUser": true
					},
					{
						"hostPath": "$$service-working/demo-host-mount",
						"createPersistent": {
							"enabled": true,
							"driver": "host"
						},
						"containerMount": "/my-demo-host-mount",
						"readOnly": false,
						"sharedUser": true
					}
				],
				"portMappings": [
					{
						"PrivatePort": "$$service-primary-port",
						"PublicPort": "$$service-primary-port"
					},
					{
						"PrivatePort": "$$service-ajp-port",
						"PublicPort": "$$service-ajp-port"
					}
				],
				"limits": {
					"cpuCoresMax": 3
				},
				"network": {
					"name": "csap-test-network",
					"note": "name can be bridge, host, or custom network name",
					"createPersistent": {
						"enabled": true,
						"driver": "bridge"
					}
				},
				"versionCommand": "echo $jarVersion"
			},
			"performance": {
				"config": {
					"about": "csapMicroUrl generates: httpCollectionUrl, javaCollectionUrl, healthCollectionUrl ",
					"csapMicroUrl": "http://$$service-fqdn-host:$$service-primary-port/$$service-name"
				},
				"HostCpuUse": {
					"attribute": "csapHostCpu",
					"max": 50,
					"title": "Host Cpu"
				},
				"HostCpuLoad": {
					"attribute": "csapHostLoad",
					"max": 50,
					"title": "Host CPU Load"
				},
				"ProcessCpu": {
					"attribute": "/process.cpu.usage",
					"decimals": "1",
					"multiplyBy": 100,
					"title": "Process CPU",
					"max": 10
				},
				"HttpRequests": {
					"attribute": "/tomcat.global.request/count",
					"title": "Http Gets Received",
					"delta": true
				},
				"LandingCount": {
					"attribute": "/csap.ui.page.landing/count",
					"title": "Landing Page Hits",
					"delta": true
				},
				"LandingCountMs": {
					"attribute": "/csap.ui.page.landing/bucket-0.95-ms",
					"title": "Landing Page 95% (ms)",
					"delta": false
				},
				"JmsConsumers": {
					"attribute": "/csap.jms.listeners-active",
					"max": 30,
					"title": "JMS Active Beans"
				},
				"JmsCount": {
					"attribute": "/csap.jms.default-payload/count",
					"title": "Jms Received",
					"delta": true
				},
				"JmsRate": {
					"attribute": "/csap.jms.default-payload/count",
					"divideBy": "interval",
					"title": "JMS Per Second",
					"delta": true
				},
				"JmsMs": {
					"attribute": "/csap.jms.default-payload/bucket-0.95-ms",
					"title": "Jms Received 95% (ms)",
					"delta": false
				},
				"DbActiveConnections": {
					"attribute": "/csap.db.pool-active",
					"max": 30,
					"title": "DB Active Connections"
				},
				"DbQueryWithFilter": {
					"attribute": "/csap.db.find-by-criteria/count",
					"title": "Db Queries Filter",
					"delta": true
				},
				"DbQueryWithFilterMs": {
					"attribute": "/csap.db.find-by-criteria/bucket-0.95-ms",
					"title": "Db Queries Filter 95% (ms)",
					"delta": false
				},
				"DbQuery": {
					"attribute": "/csap.db.find-by-jpql/count",
					"title": "Db Queries",
					"delta": true
				},
				"DbQueryMaxMs": {
					"attribute": "/csap.db.find-by-jpql/bucket-0.95-ms",
					"title": "Db Queries 95% (ms)",
					"delta": false
				},
				"DbInsert": {
					"attribute": "/csap.db.add-item/count",
					"title": "Db Inserts",
					"delta": true
				},
				"DbInsertMs": {
					"attribute": "/csap.db.add-item/bucket-0.95-ms",
					"title": "Db Inserts 95% (ms)",
					"delta": false
				},
				"DbInsertMaxMs": {
					"attribute": "/csap.db.add-item/bucket-max-ms",
					"title": "Db Inserts MAX (ms)",
					"delta": false
				},
				"DbConnection": {
					"attribute": "/dbcp.BasicDataSource.getConnection/count",
					"title": "DBCP connection requests",
					"delta": true
				}
			},
			"apacheModJk": {
				"loadBalance": [
					"method=Next",
					"sticky_session=1"
				],
				"connection": [
					"reply_timeout=10000"
				]
			},
			"lastModifiedBy": "pnightingale"
		},
		"test-docker-nginx": {
			"server": "docker",
			"autoStart": 98,
			"port": 7080,
			"description": "nginx docker demo, runs on 7080 and 7443  peter",
			"docUrl": "https://hub.docker.com/_/nginx/",
			"appDirectory": "/usr/share/nginx",
			"propDirectory": "/etc/nginx",
			"scheduledJobs": {
				"scripts": [
					{
						"description": "Sample pre deploy",
						"frequency": "event-pre-deploy",
						"script": "$$service-resources/common/csap-deploy-events.sh"
					}
				]
			},
			"docker": {
				"image": "docker.io/nginx:1.15",
				"command": [
					"nginx",
					"-g",
					"daemon off;"
				],
				"versionCommand": "nginx -v 2\u003E\u00261 | cut -d/ -f2 | cat",
				"environmentVariables": [
					"JAVA_HOME=/opt/java",
					"WORKING_DIR=/working"
				],
				"volumes": [
					{
						"hostPath": "my-demo-volume",
						"createPersistent": {
							"enabled": true,
							"driver": "local"
						},
						"containerMount": "/my-demo-local-mount",
						"readOnly": false,
						"sharedUser": true
					},
					{
						"hostPath": "/opt/csapUser/nginx-mount",
						"createPersistent": {
							"enabled": true,
							"driver": "host"
						},
						"containerMount": "/my-demo-host-mount",
						"readOnly": false,
						"sharedUser": true
					}
				],
				"portMappings": [
					{
						"PrivatePort": "443",
						"PublicPort": "7443"
					},
					{
						"PrivatePort": "80",
						"PublicPort": "7080"
					}
				],
				"limits": {
					"cpuCoresMax": 2,
					"memoryInMb": 512,
					"ulimits": [
						{
							"name": "nofile",
							"soft": 500,
							"hard": 500
						},
						{
							"name": "nproc",
							"soft": 200,
							"hard": 200
						}
					]
				},
				"networkMode": "bridge",
				"network": {
					"name": "nginx-network",
					"createPersistent": {
						"enabled": true,
						"driver": "bridge"
					}
				}
			},
			"url": "http://$$service-fqdn-host:$$service-primary-port",
			"lastModifiedBy": "pnightingale"
		},
		"test-docker-pgadmin": {
			"server": "docker",
			"autoStart": 85,
			"port": 80,
			"description": "postgress admin ui for verify csap test db",
			"alerts": {
				"max_socketCount": "55"
			},
			"docker": {
				"environmentVariables": [
					"PGADMIN_DEFAULT_EMAIL=admin@abc.com",
					"PGADMIN_DEFAULT_PASSWORD=admin"
				],
				"network": {
					"name": "csap-test-network",
					"note": "name can be bridge, host, or custom network name",
					"createPersistent": {
						"enabled": true,
						"driver": "bridge"
					}
				},
				"portMappings": [
					{
						"about": "postgres admin",
						"PrivatePort": "$$service-primary-port",
						"PublicPort": "$$service-primary-port"
					}
				],
				"image": "dpage/pgadmin4:4.15",
				"volumes": [
					{
						"about": "postgres server connections",
						"containerMount": "/pgadmin4/servers.json",
						"readOnly": false,
						"sharedUser": false,
						"hostPath": "$$service-resources/common/servers.json"
					}
				]
			},
			"url": "http://$$service-fqdn-host:$$service-primary-port",
			"docUrl": "https://hub.docker.com/r/dpage/pgadmin4/"
		},
		"test-docker-postgres": {
			"server": "docker",
			"autoStart": 83,
			"port": 5432,
			"description": "test db for csap-reference load tests",
			"docUrl": "https://hub.docker.com/_/postgres/",
			"processFilter": ".*postgres.*",
			"alerts": {
				"max_diskUtil": "400m",
				"max_fileCount": "800",
				"max_socketCount": "60"
			},
			"isDataStore": "true",
			"parameters": "",
			"jmxPort": "-1",
			"source": {
				"scm": "git",
				"path": "https://github.com/csap-platform/csap-packages.git",
				"branch": "HEAD",
				"buildLocation": "/csap-starter-tester"
			},
			"maven": {
				"dependency": "org.csap:csap-starter-tester:1.0.3:jar"
			},
			"scheduledJobs": {
				"scripts": [
					{
						"description": "Delay for postgres and activemq",
						"frequency": "event-post-start",
						"script": "wait_for_docker_log test-docker-postgres \u0027database system is ready\u0027"
					}
				]
			},
			"docker": {
				"volumes": [
					{
						"containerMount": "/var/lib/postgresql/data",
						"readOnly": false,
						"sharedUser": false,
						"hostPath": "postgres-volume",
						"createPersistent": {
							"enabled": true,
							"driver": "local"
						}
					}
				],
				"network": {
					"name": "csap-test-network",
					"note": "name can be bridge, host, or custom network name",
					"createPersistent": {
						"enabled": true,
						"driver": "bridge"
					}
				},
				"image": "docker.io/postgres:12.1",
				"portMappings": [
					{
						"PrivatePort": "5432",
						"PublicPort": "5432"
					}
				],
				"versionCommand": "postgres --version | cut -d\u0027 \u0027 -f3 | cat"
			},
			"performance": {
				"config": {
					"httpCollectionUrl": "http://$$service-host:8261/test-docker-csap-reference/csap/metrics/db/postgress",
					"patternMatch": "JSON",
					"notes": "db stats are published via test service"
				},
				"PerfTableRows": {
					"attribute": "/indexByTable/demo_event/rowCount",
					"title": "Row count (Perf Test)"
				},
				"PerfTableIndex": {
					"attribute": "/indexByTable/job_schedule/indexPercentUsed",
					"title": "Index Used % (Perf Test)"
				},
				"Inserts": {
					"attribute": "/statsByUser/all/inserts",
					"delta": "delta",
					"title": "Insert Operations"
				},
				"Queries": {
					"attribute": "/statsByUser/all/querys",
					"delta": "delta",
					"title": "Query Operations"
				},
				"Updates": {
					"attribute": "/statsByUser/all/updates",
					"delta": "delta",
					"title": "Update Operations"
				},
				"Deletes": {
					"attribute": "/statsByUser/all/deletes",
					"delta": "delta",
					"title": "Delete Operations"
				},
				"transComm": {
					"attribute": "/statsByUser/all/transactionsCommitted",
					"delta": "delta",
					"title": "Transactions Committed"
				},
				"transRolled": {
					"attribute": "/statsByUser/all/transactionsRolledBack",
					"delta": "delta",
					"title": "Transactions RolledBack"
				},
				"TableSize": {
					"attribute": "/tableSizeInKb",
					"title": "Table Size (kb)"
				},
				"IndexSize": {
					"attribute": "/indexSizeInKb",
					"title": "Index Size (kb)"
				},
				"heapCacheRatio": {
					"attribute": "/heapCache/ratio",
					"title": "Heap Cache (%)",
					"decimals": "1",
					"multiplyBy": 100
				},
				"heapCacheHits2": {
					"attribute": "/heapCache/hits",
					"delta": "delta",
					"title": "Heap Cache (Hits)"
				},
				"indexCacheRatio": {
					"attribute": "/indexCache/ratio",
					"title": "Index Cache (%)",
					"decimals": "1",
					"multiplyBy": 100
				},
				"indexCacheHits": {
					"attribute": "/indexCache/hits",
					"delta": "delta",
					"title": "Index Cache (Hits)"
				}
			},
			"url": "https://hub.docker.com/_/postgres/",
			"lastModifiedBy": "pnightingale"
		},
		"test-k8s-activemq": {
			"server": "docker",
			"autoStart": 400,
			"port": 8161,
			"description": "test messaging service for csap-reference load tests ",
			"docUrl": "https://***REMOVED***.atlassian.net/wiki/spaces/CSAP/pages/347079099/Kubernetes+Integration+Tests",
			"alerts": {
				"max_socketCount": "40"
			},
			"isMessaging": "true",
			"scheduledJobs": {
				"scripts": [
					{
						"description": "wait for pod startup",
						"frequency": "event-post-deploy",
						"script": "wait_for_pod_conditions $$service-name; sleep 5"
					},
					{
						"description": "wait for pod shutdown",
						"frequency": "event-post-stop",
						"script": "wait_for_pod_removed $csapName"
					}
				]
			},
			"docker": {
				"image": "csap/csap-activemq:5.15",
				"kubernetes-settings": {
					"service-type": "NodePort",
					"add-csap-tools": "false",
					"node-selectors": {
						"kubernetes.io/hostname": "csap-dev05.***REMOVED***"
					}
				},
				"portMappings": [
					{
						"containerPort": "$$service-primary-port",
						"servicePort": "$$service-primary-port",
						"name": "ui-port"
					},
					{
						"containerPort": "61616",
						"servicePort": "61616",
						"name": "jms-port"
					}
				],
				"container-count": "1",
				"volumes": [
					{
						"about": "mq log volume",
						"name": "mq-local-log",
						"mountPath": "/var/log/activemq",
						"emptyDir": {
							"sizeLimit": "10Mi"
						}
					},
					{
						"about": "data volume",
						"name": "mq-data-nfs-volume",
						"mountPath": "/data/activemq",
						"persistentVolumeClaim": {
							"claimName": "$$service-name-claim",
							"storageClass": "csap-nfs-storage-1",
							"accessModes": [
								"ReadWriteOnce"
							],
							"storage": "5Gi",
							"createIfNotPresent": true
						}
					}
				],
				"versionCommand": "ls /opt/activemq/*.jar | cut -d- -f3 | cat | rev | cut --characters 5- | rev"
			},
			"url": "$$kubernetes-nodeport?serviceName=$$service-name\u0026path=/",
			"lastModifiedBy": "pnightingale"
		},
		"test-k8s-by-spec": {
			"server": "docker",
			"autoStart": 430,
			"port": 7080,
			"description": "csap reference java service deployed via spec  to kubernetes",
			"docUrl": "https://***REMOVED***.atlassian.net/wiki/spaces/CSAP/pages/347079099/Kubernetes+Integration+Tests",
			"parameters": "-Xms256M -Xmx256M -Duser.timezone=America/New_York -Dcsap.security.enabled=true -Dserver.servlet.context-path=/$$service-name -Dspring.profiles.active=services-embedded -DcsapJmxPort=$$service-jmx-port -Dserver.port=$$service-primary-port",
			"environmentVariables": {
				"configuration-maps": [
					"storage-settings",
					"ingress-nginx"
				]
			},
			"scheduledJobs": {
				"scripts": [
					{
						"description": "wait for pod conditions",
						"frequency": "event-post-deploy",
						"script": "wait_for_pod_conditions $$service-name $$service-replica-count"
					},
					{
						"description": "wait for pod shutdown",
						"frequency": "event-post-stop",
						"script": "wait_for_pod_removed $$service-name"
					}
				]
			},
			"docker": {
				"deployment-files-use": "true",
				"deployment-file-names": [
					"$$service-resources/default-storage/pvc-deploy-only.yml",
					"$$service-resources/default-storage/deployment.yml"
				],
				"locator": {
					"value": "$$service-name-container",
					"type": "io.kubernetes.container.name"
				},
				"container-count": "2",
				"image": "csap/csap-test-app:21.04",
				"versionCommand": "echo $jarVersion"
			},
			"performance": {
				"config": {
					"patternMatch": "JSON",
					"notes": "db stats are published via test service",
					"httpCollectionUrl": "http://$$kubernetes-pod-ip:$$service-primary-port/$$service-name/csap/metrics/micrometers?aggregate=true\u0026encode=true\u0026tagFilter=csap-collection",
					"javaCollectionUrl": "http://$$kubernetes-pod-ip:$$service-primary-port/$$service-name/csap/metrics/micrometers?aggregate=true\u0026encode=true\u0026tagFilter=csap-collection",
					"healthCollectionUrl": "http://$$kubernetes-pod-ip:$$service-primary-port/$$service-name/csap/metrics/micrometers?aggregate=true\u0026encode=true\u0026tagFilter=csap-collection"
				},
				"ProcessCpu": {
					"attribute": "/process.cpu.usage",
					"title": "Process CPU",
					"decimals": "1",
					"multiplyBy": 100,
					"delta": false
				},
				"HttpRequests": {
					"attribute": "/tomcat.global.request/count",
					"title": "Http Gets Received",
					"delta": true
				},
				"LandingCount": {
					"attribute": "/csap.ui.page.landing/count",
					"title": "Landing Page Hits",
					"delta": true
				},
				"LandingCountMs": {
					"attribute": "/csap.ui.page.landing/bucket-0.95-ms",
					"title": "Landing Page 95% (ms)",
					"delta": false
				},
				"JmsCount": {
					"attribute": "/csap.jms.test-scenario/count",
					"title": "Jms Received",
					"delta": true
				},
				"JmsMs": {
					"attribute": "/csap.jms.test-scenario/bucket-0.95-ms",
					"title": "Jms Received 95% (ms)",
					"delta": false
				},
				"DbQueryWithFilter": {
					"attribute": "/csap.db.find-by-criteria/count",
					"title": "Db Queries Filter",
					"delta": true
				},
				"DbQueryWithFilterMs": {
					"attribute": "/csap.db.find-by-criteria/bucket-0.95-ms",
					"title": "Db Queries Filter 95% (ms)",
					"delta": false
				},
				"DbQuery": {
					"attribute": "/csap.db.find-by-jpql/count",
					"title": "Db Queries",
					"delta": true
				},
				"DbQueryMaxMs": {
					"attribute": "/csap.db.find-by-jpql/bucket-0.95-ms",
					"title": "Db Queries 95% (ms)",
					"delta": false
				},
				"DbInsert": {
					"attribute": "/csap.db.add-item/count",
					"title": "Db Inserts",
					"delta": true
				},
				"DbInsertMs": {
					"attribute": "/csap.db.add-item/bucket-0.95-ms",
					"title": "Db Inserts 95% (ms)",
					"delta": false
				},
				"DbInsertMaxMs": {
					"attribute": "/csap.db.add-item/bucket-max-ms",
					"title": "Db Inserts MAX (ms)",
					"delta": false
				},
				"DbConnection": {
					"attribute": "/dbcp.BasicDataSource.getConnection/count",
					"title": "DBCP connection requests",
					"delta": true
				}
			},
			"url": "$$kubernetes-ingress?path=/$$service-name",
			"lastModifiedBy": "pnightingale"
		},
		"test-k8s-csap-reference": {
			"server": "docker",
			"autoStart": 420,
			"port": 6090,
			"description": "csap reference java service deployed via generated spec to kubernetes",
			"docUrl": "https://***REMOVED***.atlassian.net/wiki/spaces/CSAP/pages/347079099/Kubernetes+Integration+Tests",
			"alerts": {
				"max_diskUtil": "200",
				"max_threadCount": "200",
				"max_fileCount": "500",
				"max_socketCount": "100",
				"max_rssMemory": "1400m",
				"max_tomcatConnections": "10",
				"max_topCpu": "150"
			},
			"parameters": "-Duser.timezone=America/New_York -Xms200M -Xmx300M -Dcsap.security.enabled=true -Dserver.servlet.context-path=/$$service-name -Dspring.profiles.active=services -DcsapJmxPort=$$service-jmx-port -Dserver.port=$$service-primary-port",
			"environmentVariables": {
				"configuration-maps": [
					"ingress-nginx"
				],
				"jmsHost": "test-k8s-activemq-service",
				"dbHost": "test-k8s-postgres-service"
			},
			"source": {
				"scm": "git",
				"path": "https://moc-bb.***REMOVED***/bitbucket/scm/csap/csap-starter.git",
				"branch": "HEAD",
				"buildLocation": "/csap-starter-tester"
			},
			"maven": {
				"dependency": "org.csap:csap-starter-tester:2-SNAPSHOT:jar"
			},
			"logJournalServices": "docker,kubelet",
			"scheduledJobs": {
				"scripts": [
					{
						"description": "wait for pod startup",
						"frequency": "event-post-deploy",
						"script": "wait_for_pod_conditions $$service-name; sleep 5"
					},
					{
						"description": "wait for pod shutdown",
						"frequency": "event-post-stop",
						"script": "wait_for_pod_removed $$service-name"
					}
				]
			},
			"docker": {
				"image": "csap/csap-test-app:21.04",
				"locator-uncomment-to-use": {
					"type": "io.kubernetes.container.name",
					"value": "csap-test-k8s-service-6090-container"
				},
				"kubernetes-settings": {
					"replica-count": "6",
					"service-type": "NodePort",
					"ingress-path": "/$$service-name",
					"ingress-port": "$$service-primary-port",
					"add-csap-tools": "false",
					"pod-annotations": {
						"sample-annotation-1": "sample-value-1",
						"sample-annotation-2": "sample-value-2"
					},
					"readinessProbe": {
						"http-path": "/$$service-context/devOps/health",
						"timeoutSeconds": "3"
					},
					"livenessProbe": {
						"http-path": "/$$service-context/devOps/health",
						"timeoutSeconds": "3"
					},
					"resources": {
						"about": "note 1m cpu = 1/1000",
						"limits": {
							"memory": "2G",
							"cpu": 16
						},
						"requests": {
							"memory": "500M",
							"cpu": "1500m"
						}
					}
				},
				"runUser": "$csapUser",
				"workingDirectory": "",
				"networkMode": "",
				"versionCommand": "echo $jarVersion",
				"environmentVariables": [
					"PARENT_HOST=$$service-host",
					"javaOptions=$$service-parameters"
				],
				"portMappings": [
					{
						"containerPort": "$$service-primary-port",
						"servicePort": "$$service-primary-port",
						"name": "http-$$service-primary-port"
					}
				],
				"volumes": [
					{
						"name": "csap-test-demo",
						"mountPath": "/mnt/empty-dir",
						"emptyDir": {
							"sizeLimit": "1Mi"
						}
					}
				],
				"containerName": "$$service-name"
			},
			"performance": {
				"config": {
					"patternMatch": "JSON",
					"notes": "db stats are published via test service",
					"httpCollectionUrl": "http://$$kubernetes-pod-ip:$$service-primary-port/$$service-name/csap/metrics/micrometers?aggregate=true\u0026encode=true\u0026tagFilter=csap-collection",
					"javaCollectionUrl": "http://$$kubernetes-pod-ip:$$service-primary-port/$$service-name/csap/metrics/micrometers?aggregate=true\u0026encode=true\u0026tagFilter=csap-collection",
					"healthCollectionUrl": "http://$$kubernetes-pod-ip:$$service-primary-port/$$service-name/csap/metrics/micrometers?aggregate=true\u0026encode=true\u0026tagFilter=csap-collection"
				},
				"HostCpuUse": {
					"attribute": "csapHostCpu",
					"max": 50,
					"title": "Host Cpu"
				},
				"HostCpuLoad": {
					"attribute": "csapHostLoad",
					"max": 50,
					"title": "Host Cpu Load"
				},
				"ProcessCpu": {
					"attribute": "/process.cpu.usage",
					"decimals": "1",
					"multiplyBy": 100,
					"title": "Process CPU",
					"max": 10
				},
				"HttpRequests": {
					"attribute": "/tomcat.global.request/count",
					"title": "Http Gets Received",
					"delta": true
				},
				"LandingCount": {
					"attribute": "/csap.ui.page.landing/count",
					"title": "Landing Page Hits",
					"delta": true
				},
				"LandingCountMs": {
					"attribute": "/csap.ui.page.landing/bucket-0.95-ms",
					"title": "Landing Page 95% (ms)",
					"delta": false
				},
				"JmsConsumers": {
					"attribute": "/csap.jms.listeners-active",
					"max": 30,
					"title": "JMS Active Beans"
				},
				"JmsCount": {
					"attribute": "/csap.jms.default-payload/count",
					"title": "Jms Received",
					"delta": true
				},
				"JmsRate": {
					"attribute": "/csap.jms.default-payload/count",
					"divideBy": "interval",
					"title": "JMS Per Second",
					"delta": true
				},
				"JmsMs": {
					"attribute": "/csap.jms.default-payload/bucket-0.95-ms",
					"title": "Jms Received 95% (ms)",
					"delta": false
				},
				"DbActiveConnections": {
					"attribute": "/csap.db.pool-active",
					"max": 30,
					"title": "DB Active Connections"
				},
				"DbQueryWithFilter": {
					"attribute": "/csap.db.find-by-criteria/count",
					"title": "Db Queries Filter",
					"delta": true
				},
				"DbQueryWithFilterMs": {
					"attribute": "/csap.db.find-by-criteria/bucket-0.95-ms",
					"title": "Db Queries Filter 95% (ms)",
					"delta": false
				},
				"DbQuery": {
					"attribute": "/csap.db.find-by-jpql/count",
					"title": "Db Queries",
					"delta": true
				},
				"DbQueryMaxMs": {
					"attribute": "/csap.db.find-by-jpql/bucket-0.95-ms",
					"title": "Db Queries 95% (ms)",
					"delta": false
				},
				"DbInsert": {
					"attribute": "/csap.db.add-item/count",
					"title": "Db Inserts",
					"delta": true
				},
				"DbInsertMs": {
					"attribute": "/csap.db.add-item/bucket-0.95-ms",
					"title": "Db Inserts 95% (ms)",
					"delta": false
				},
				"DbInsertMaxMs": {
					"attribute": "/csap.db.add-item/bucket-max-ms",
					"title": "Db Inserts MAX (ms)",
					"delta": false
				},
				"DbConnection": {
					"attribute": "/dbcp.BasicDataSource.getConnection/count",
					"title": "DBCP connection requests",
					"delta": true
				}
			},
			"url": "$$kubernetes-ingress?path=/$$service-name",
			"lastModifiedBy": "pnightingale"
		},
		"test-k8s-postgres": {
			"server": "docker",
			"autoStart": 410,
			"port": 5432,
			"description": "csap reference db deployed to kubernetes",
			"docUrl": "https://***REMOVED***.atlassian.net/wiki/spaces/CSAP/pages/347079099/Kubernetes+Integration+Tests",
			"url": "http://$$service-fqdn-host:8014/api/v1/namespaces/$$service-namespace/services/$$service-name-service",
			"alerts": {
				"max_diskUtil": "500g",
				"max_fileCount": "700",
				"max_socketCount": "50"
			},
			"isDataStore": "true",
			"scheduledJobs": {
				"scripts": [
					{
						"description": "wait for pod startup",
						"frequency": "event-post-deploy",
						"script": "wait_for_pod_conditions $$service-name; sleep 5"
					},
					{
						"description": "wait for pod shutdown",
						"frequency": "event-post-stop",
						"script": "wait_for_pod_removed $$service-name"
					}
				]
			},
			"docker": {
				"image": "docker.io/postgres:12.1",
				"kubernetes-settings": {
					"service-type": "ClusterIP",
					"replica-count": "1",
					"add-csap-tools": "false",
					"node-selectors": {
						"kubernetes.io/hostname": "csap-dev06.***REMOVED***"
					}
				},
				"container-count": "1",
				"deployment-files-use": "true",
				"deployment-file-names": [
					"$$service-resources/common/deploy-only-volume.yaml",
					"$$service-resources/common/deploy.yaml"
				],
				"volumes": [
					{
						"name": "$$service-name-volume",
						"mountPath": "/var/lib/postgresql/data",
						"persistentVolumeClaim": {
							"claimName": "$$service-name-claim",
							"storageClass": "csap-nfs-storage-1",
							"accessModes": [
								"ReadWriteOnce"
							],
							"storage": "10Gi",
							"createIfNotPresent": true
						}
					}
				],
				"portMappings": [
					{
						"containerPort": "$$service-primary-port",
						"servicePort": "$$service-primary-port",
						"name": "tcp-$$service-primary-port"
					}
				],
				"versionCommand": "postgres --version | cut -d\u0027 \u0027 -f3 | cat"
			},
			"performance": {
				"config": {
					"about": "Uses ingress for reference services",
					"httpCollectionUrl": "http://$$service-fqdn-host/test-k8s-csap-reference/csap/metrics/db/postgress",
					"sample-api-httpCollectionUrl": "http://$$service-host:8014/api/v1/namespaces/csap-test/services/test-k8s-csap-reference-service:http-6090/proxy/test-k8s-csap-reference/csap/metrics/db/postgress",
					"patternMatch": "JSON",
					"notes": "db stats are published via test service"
				},
				"PerfTableRows": {
					"attribute": "/indexByTable/demo_event/rowCount",
					"title": "Row count (Perf Test)"
				},
				"PerfTableIndex": {
					"attribute": "/indexByTable/job_schedule/indexPercentUsed",
					"title": "Index Used % (Perf Test)"
				},
				"Inserts": {
					"attribute": "/statsByUser/postgres/inserts",
					"delta": "delta",
					"title": "Insert Operations"
				},
				"Queries": {
					"attribute": "/statsByUser/postgres/querys",
					"delta": "delta",
					"title": "Query Operations"
				},
				"Updates": {
					"attribute": "/statsByUser/postgres/updates",
					"delta": "delta",
					"title": "Update Operations"
				},
				"Deletes": {
					"attribute": "/statsByUser/postgres/deletes",
					"delta": "delta",
					"title": "Delete Operations"
				},
				"transComm": {
					"attribute": "/statsByUser/postgres/transactionsCommitted",
					"delta": "delta",
					"title": "Transactions Committed"
				},
				"transRolled": {
					"attribute": "/statsByUser/postgres/transactionsRolledBack",
					"delta": "delta",
					"title": "Transactions RolledBack"
				},
				"TableSize": {
					"attribute": "/tableSizeInKb",
					"title": "Table Size (kb)"
				},
				"IndexSize": {
					"attribute": "/indexSizeInKb",
					"title": "Index Size (kb)"
				},
				"heapCacheRatio": {
					"attribute": "/heapCache/ratio",
					"title": "Heap Cache (%)",
					"decimals": "1",
					"multiplyBy": 100
				},
				"heapCacheHits2": {
					"attribute": "/heapCache/hits",
					"delta": "delta",
					"title": "Heap Cache (Hits)"
				},
				"indexCacheRatio": {
					"attribute": "/indexCache/ratio",
					"title": "Index Cache (%)",
					"decimals": "1",
					"multiplyBy": 100
				},
				"indexCacheHits": {
					"attribute": "/indexCache/hits",
					"delta": "delta",
					"title": "Index Cache (Hits)"
				}
			},
			"lastModifiedBy": "pnightingale"
		},
		"csap-package-logging": {
			"server": "csap-api",
			"isDataStore": true,
			"autoStart": "do-not-restart",
			"description": "Deploys kubernetes logging components",
			"url": "https://***REMOVED***.atlassian.net/wiki/spaces/CSAP/pages/1058572066/csap-package-logging",
			"docUrl": "https://***REMOVED***.atlassian.net/wiki/spaces/CSAP/pages/1058572066/csap-package-logging",
			"deploymentNotes": "Create all required kubernetes artifacts",
			"processFilter": "none",
			"environmentVariables": {
				"configuration-maps": [
					"storage-settings",
					"csap-logging-defaults",
					"csap-logging"
				]
			},
			"alerts": {
				"max_socketCount": 60,
				"max_diskUtil": "10g"
			},
			"source": {
				"scm": "git",
				"path": "https://bitbucket.org/***REMOVED***/oss-csap-packages.git",
				"branch": "HEAD",
				"buildLocation": "/csap-package-logging"
			},
			"maven": {
				"dependency": "org.csap:csap-package-logging:21.06:zip"
			}
		},
		"csap-package-monitoring": {
			"server": "csap-api",
			"autoStart": 200,
			"description": "Deploys kubernetes monitoring components generated using kube-promethius opensource project",
			"docUrl": "https://***REMOVED***.atlassian.net/wiki/spaces/CSAP/pages/1548714073/csap-package-monitoring",
			"processFilter": "none",
			"alerts": {
				"max_socketCount": 60,
				"max_diskUtil": "10g"
			},
			"environmentVariables": {
				"configuration-maps": [
					"storage-settings",
					"csap-monitoring-defaults",
					"csap-monitoring"
				]
			},
			"source": {
				"scm": "git",
				"path": "https://bitbucket.org/***REMOVED***/oss-csap-packages.git",
				"branch": "HEAD",
				"buildLocation": "/csap-package-monitoring"
			},
			"maven": {
				"dependency": "org.csap:csap-package-monitoring:21.06:zip"
			},
			"url": "https://***REMOVED***.atlassian.net/wiki/spaces/CSAP/pages/1548714073/csap-package-monitoring",
			"deploymentNotes": "All kube-prometheseus components will be deployed. Note: only occurs on primary master",
			"lastModifiedBy": "pnightingale"
		},
		"rni-1": {
			"server": "os",
			"description": "kubernetes monitors for csap",
			"runUsingDocker": "true",
			"docker": {
				"locator": {
					"podNamespace": "rni-1",
					"value-old": "(api-gateway-app|auth-app|authz-app|batch-engine-app|broker-app|cce-app|configdownload-app|db-monitor-app|de-runner-app|epc-app|esm-app|flexapps-app|flexmessaging-app|fnp-server-app|fwdl-electric-app|fwdl-na2w-app|gateway-app|grafana-app|han-app|httpd-app|httpd-monitor-app|loadprofile-tools-app|mdmif-app|meterread-app|msgarchiver-app|nextgenbackfill-app|notifications-app|pg-app|pg-monitor-app|prometheus-app|redis-app|redis-monitor-app|rni-file-browser-app|rniapiengine-app|scheduler-app|sdc-app|spooler-app|tgblistener-app|touread-app|web-app|websites-app)",
					"value": "*"
				},
				"aggregateContainers": "true"
			},
			"lastModifiedBy": "pnightingale"
		},
		"prometheus": {
			"server": "os",
			"scmVersion": "os",
			"runUsingDocker": true,
			"isDataStore": true,
			"appDirectory": "/",
			"propDirectory": "/etc",
			"description": "collector and storage of performance data for kube-prometheus components",
			"url": "$$kubernetes-nodeport?serviceName=$$service-name\u0026path=/",
			"docUrl": "https://github.com/prometheus-operator/kube-prometheus",
			"alerts": {
				"max_socketCount": 60,
				"max_diskUtil": "30g",
				"max_diskWriteKb": 500
			},
			"docker": {
				"container-count": 1,
				"locator": {
					"type": "io.kubernetes.container.name",
					"value": "$$service-name"
				}
			},
			"logJournalServices": "kubelet,docker"
		},
		"grafana": {
			"server": "os",
			"scmVersion": "os",
			"runUsingDocker": true,
			"appDirectory": "/",
			"propDirectory": "/etc/grafana",
			"description": "user interface for kube-prometheus prometheus component",
			"url": "$$kubernetes-nodeport?serviceName=$$service-name\u0026path=/",
			"docUrl": "https://github.com/prometheus-operator/kube-prometheus",
			"alerts": {
				"max_socketCount": 10,
				"max_diskUtil": "10m"
			},
			"docker": {
				"container-count": 1,
				"locator": {
					"type": "io.kubernetes.container.name",
					"value": "$$service-name"
				}
			},
			"logJournalServices": "kubelet,docker"
		},
		"alertmanager": {
			"server": "os",
			"scmVersion": "os",
			"runUsingDocker": true,
			"appDirectory": "/",
			"propDirectory": "/etc",
			"description": "alert ui for kube-prometheus prometheus component",
			"url": "$$kubernetes-nodeport?serviceName=$$service-name\u0026path=/",
			"docUrl": "https://github.com/prometheus-operator/kube-prometheus",
			"alerts": {
				"max_socketCount": 10,
				"max_diskUtil": "10m"
			},
			"docker": {
				"container-count": 1,
				"locator": {
					"type": "io.kubernetes.container.name",
					"value": "$$service-name"
				}
			},
			"logJournalServices": "kubelet,docker"
		},
		"monitoring-tools": {
			"server": "os",
			"scmVersion": "os",
			"runUsingDocker": true,
			"appDirectory": "/",
			"propDirectory": "/etc",
			"description": "maps helper containers so they are resource tracked",
			"url": "$$kubernetes-nodeport?serviceName=$$service-name\u0026path=/",
			"docUrl": "https://github.com/prometheus-operator/kube-prometheus",
			"alerts": {
				"max_socketCount": 800
			},
			"docker": {
				"container-count": 1,
				"locator": {
					"type": "io.kubernetes.container.name",
					"value": "(prometheus-config-reloader|prometheus-adapter|prometheus-operator|kube-rbac-proxy-self|kube-rbac-proxy-main|rules-configmap-reloader|config-reloader|kube-rbac-proxy|node-exporter|kube-state-metrics)"
				}
			},
			"logJournalServices": "kubelet,docker"
		},
		"elastic-search": {
			"server": "docker",
			"isDataStore": true,
			"autoStart": 502,
			"description": "elastic search persists and indexes logs captures by fluentd",
			"deploymentNotes": "Volumes are created during deployment; remove csap-package-logging to delete",
			"url": "http://$$service-fqdn-host:8014/api/v1/namespaces/$$service-namespace/services/$$service-name:rest/proxy/_cluster/state?pretty",
			"docUrl": "https://www.digitalocean.com/community/tutorials/how-to-set-up-an-elasticsearch-fluentd-and-kibana-efk-logging-stack-on-kubernetes",
			"environmentVariables": {
				"configuration-maps": [
					"storage-settings",
					"csap-logging-defaults",
					"csap-logging"
				]
			},
			"alerts": {
				"max_socketCount": 100,
				"max_diskUtil": "50g",
				"max_diskWriteKb": 5000,
				"max_fileCount": 1000
			},
			"docker": {
				"image": "docker.elastic.co/elasticsearch/elasticsearch:7.13.0",
				"locator": {
					"type": "io.kubernetes.container.name",
					"value": "$$service-name-container"
				},
				"container-count": 3,
				"deployment-files-use": true,
				"deployment-file-names": [
					"SEARCH_FOR_RESOURCE:deploy-only-volume.yaml",
					"SEARCH_FOR_RESOURCE:curator-config-map.yaml",
					"SEARCH_FOR_RESOURCE:elastic-search.yaml"
				]
			},
			"scheduledJobs": {
				"scripts": [
					{
						"description": "show indexes",
						"frequency": "on-demand",
						"script": "$$service-resources/rest-commands.sh showIndexes"
					},
					{
						"description": "wipe kibana dashboards and settings. kibana deployment should be removed prior to running.",
						"frequency": "on-demand",
						"script": "$$service-resources/rest-commands.sh wipeKibana"
					},
					{
						"description": "wipe ALL data",
						"frequency": "on-demand",
						"script": "$$service-resources/rest-commands.sh wipeAllData"
					},
					{
						"description": "run curator clean up",
						"frequency": "on-demand",
						"script": "kubectl delete job --namespace=$$service-namespace $$service-name-cleanup-on-demand; kubectl create job --namespace=$$service-namespace --from=cronjob/curator-cron $$service-name-cleanup-on-demand;"
					},
					{
						"description": "create mount points",
						"frequency": "event-pre-deploy",
						"script": "$$service-resources/create-mount-points.sh"
					},
					{
						"description": "wait for pod conditions",
						"frequency": "event-post-deploy",
						"script": "wait_for_pod_conditions $$service-name $$service-replica-count"
					},
					{
						"description": "wait for pod shutdown",
						"frequency": "event-post-stop",
						"script": "wait_for_pod_removed $$service-name"
					}
				]
			}
		},
		"elastic-hq": {
			"server": "docker",
			"autoStart": 504,
			"description": "Manager for elastic-search",
			"url": "http://$$service-fqdn-host:8014/api/v1/namespaces/$$service-namespace/services/$$service-name-service:http/proxy/#!/clusters",
			"environmentVariables": {
				"configuration-maps": [
					"storage-settings",
					"csap-logging-defaults",
					"csap-logging"
				]
			},
			"docker": {
				"image": "elastichq/elasticsearch-hq",
				"container-count": 1,
				"locator": {
					"type": "io.kubernetes.container.name",
					"value": "$$service-name-container"
				},
				"deployment-files-use": true,
				"deployment-file-names": [
					"SEARCH_FOR_RESOURCE:elastic-hq.yaml"
				]
			},
			"scheduledJobs": {
				"scripts": [
					{
						"description": "wait for pod conditions",
						"frequency": "event-post-deploy",
						"script": "wait_for_pod_conditions $$service-name"
					},
					{
						"description": "wait for pod shutdown",
						"frequency": "event-post-stop",
						"script": "wait_for_pod_removed $$service-name"
					}
				]
			}
		},
		"fluentd": {
			"server": "docker",
			"autoStart": 508,
			"description": "fluentd scrapes logs off of filesystem to uploads to storage (elastic)",
			"docUrl": "https://github.com/fluent/fluentd-kubernetes-daemonset",
			"appDirectory": "/fluentd",
			"propDirectory": "/fluentd/etc",
			"alerts": {
				"max_diskUtil": "300m",
				"max_socketCount": 20
			},
			"environmentVariables": {
				"configuration-maps": [
					"storage-settings",
					"csap-logging-defaults",
					"csap-logging"
				]
			},
			"docker": {
				"image": "fluent/fluentd-kubernetes-daemonset:v1.12.4-debian-elasticsearch7-1.0",
				"locator": {
					"type": "io.kubernetes.container.name",
					"value": "$$service-name-container"
				},
				"deployment-files-use": true,
				"deployment-file-names": [
					"SEARCH_FOR_RESOURCE:fluentd.yaml"
				]
			},
			"scheduledJobs": {
				"scripts": [
					{
						"description": "wait for pod conditions",
						"frequency": "event-post-deploy",
						"script": "wait_for_pod_conditions $$service-name"
					},
					{
						"description": "wait for pod shutdown",
						"frequency": "event-post-stop",
						"script": "wait_for_pod_removed $$service-name"
					}
				]
			}
		},
		"kibana": {
			"server": "docker",
			"autoStart": 506,
			"description": "User Interfaces for elastic-search",
			"url": "$$kubernetes-ingress?path=/$$service-name/app/kibana#/discover",
			"docUrl": "https://www.elastic.co/guide/en/kibana/current/whats-new.html",
			"alerts": {
				"max_diskUtil": "200m",
				"max_socketCount": 100
			},
			"environmentVariables": {
				"configuration-maps": [
					"storage-settings",
					"csap-logging-defaults",
					"csap-logging",
					"ingress-nginx"
				]
			},
			"docker": {
				"image": "docker.elastic.co/kibana/kibana:7.13.0",
				"container-count": 1,
				"locator": {
					"type": "io.kubernetes.container.name",
					"value": "$$service-name-container"
				},
				"deployment-files-use": true,
				"deployment-file-names": [
					"SEARCH_FOR_RESOURCE:kibana.yaml"
				]
			},
			"scheduledJobs": {
				"scripts": [
					{
						"description": "wait for kibana running",
						"frequency": "event-post-deploy",
						"script": "wait_for_pod_conditions $$service-name"
					},
					{
						"description": "load ***REMOVED*** dashboards",
						"frequency": "event-post-deploy",
						"script": "$$service-resources/load-***REMOVED***-dashboards.sh"
					},
					{
						"description": "wait for kibana shutdown",
						"frequency": "event-post-stop",
						"script": "wait_for_pod_removed $$service-name"
					}
				]
			}
		}
	}
}