
#
#  ================ profile: services
#   - for localhost docker, add a docker postgres and activemq instances,
#   - for VM running docker, name it centos1 or update variable
#
#spring:
#  profiles:
  
#    include: 
#    - monitoring-sql
    
spring.jpa: 
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    show-sql: false
    hibernate:
      ddl-auto: update

my-service-configuration:  

  db: 
    url: jdbc:postgresql://${dbHost:localhost}:5432/postgres
    driver-class-name: org.postgresql.Driver
    username: postgres
    password: 
    max-active: 25
    max-idle: 25
    idle-eviction-ms: 10000
    

  jms: 
    enabled: true
    server-url: tcp://${jmsHost:localhost}:61616
    max-messages-per-task: 1
    concurrency: "1-30"
    receive-timeout: 5000
    burn-db-iterations: 20
    burn-db-inserts: 1000
    
my-service-configuration.db.monitoring-sql:

  # only show stats for selected
  db-filter-pattern: .*

  stats: SELECT * FROM pg_stat_database
  
  cache-index: 
    SELECT
      sum(idx_blks_hit) as hits,
      sum(idx_blks_read)  as reads,
      sum( idx_blks_hit) / nullif( sum( idx_blks_hit ) + sum( idx_blks_read),0) as ratio
      FROM 
      pg_statio_user_indexes;
    
  cache-heap: 
    SELECT
      sum(heap_blks_hit)  as hits,
      sum(heap_blks_read) as reads,
      sum(heap_blks_hit) / nullif( (sum(heap_blks_hit) + sum(heap_blks_read)), 0 ) as ratio
      FROM 
      pg_statio_user_tables;
  
  table-size: 
    SELECT sum(pg_table_size(pg_class.oid))
    FROM pg_class
    LEFT JOIN pg_namespace ON (pg_namespace.oid = pg_class.relnamespace)
    WHERE nspname NOT IN ('pg_catalog', 'information_schema') AND
    nspname !~ '^pg_toast' AND
    relkind IN ('r')
    
  index-size: 
    SELECT
      sum(pg_indexes_size(pg_class.oid))
      FROM pg_class
      LEFT JOIN pg_namespace N ON (N.oid = pg_class.relnamespace)
      WHERE nspname NOT IN ('pg_catalog', 'information_schema') AND
      nspname !~ '^pg_toast' AND
    relkind IN ('r')
    
  index-use: 
    SELECT 
      relname, 
      100 * idx_scan / (seq_scan + idx_scan) percent_of_times_index_used, 
      n_live_tup rows_in_table
    FROM 
      pg_stat_user_tables
    WHERE 
        seq_scan + idx_scan > 0 
    ORDER BY 
      n_live_tup DESC
    
    limit 5
    